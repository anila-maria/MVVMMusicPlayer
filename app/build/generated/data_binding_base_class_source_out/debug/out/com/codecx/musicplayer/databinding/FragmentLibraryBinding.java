// Generated by data binding compiler. Do not edit!
package com.codecx.musicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import com.airbnb.lottie.LottieAnimationView;
import com.codecx.musicplayer.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentLibraryBinding extends ViewDataBinding {
  @NonNull
  public final LottieAnimationView mEmpty;

  @NonNull
  public final SwipeRefreshLayout pullToRefresh;

  @NonNull
  public final RecyclerView songsRv;

  @NonNull
  public final TextInputLayout txtSearch;

  protected FragmentLibraryBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LottieAnimationView mEmpty, SwipeRefreshLayout pullToRefresh, RecyclerView songsRv,
      TextInputLayout txtSearch) {
    super(_bindingComponent, _root, _localFieldCount);
    this.mEmpty = mEmpty;
    this.pullToRefresh = pullToRefresh;
    this.songsRv = songsRv;
    this.txtSearch = txtSearch;
  }

  @NonNull
  public static FragmentLibraryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_library, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentLibraryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentLibraryBinding>inflateInternal(inflater, R.layout.fragment_library, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentLibraryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_library, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentLibraryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentLibraryBinding>inflateInternal(inflater, R.layout.fragment_library, null, false, component);
  }

  public static FragmentLibraryBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentLibraryBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentLibraryBinding)bind(component, view, R.layout.fragment_library);
  }
}
