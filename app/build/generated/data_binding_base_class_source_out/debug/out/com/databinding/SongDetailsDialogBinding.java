// Generated by view binder compiler. Do not edit!
package com.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SongDetailsDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ConstraintLayout bitrateLayout;

  @NonNull
  public final MaterialButton btnOk;

  @NonNull
  public final AppCompatTextView detailsFileBitrateContent;

  @NonNull
  public final AppCompatTextView detailsFileBitrateTitle;

  @NonNull
  public final AppCompatTextView detailsFileLengthContent;

  @NonNull
  public final AppCompatTextView detailsFileLengthTitle;

  @NonNull
  public final AppCompatTextView detailsFileNameContent;

  @NonNull
  public final AppCompatTextView detailsFileNameTitle;

  @NonNull
  public final AppCompatTextView detailsFilePathContent;

  @NonNull
  public final AppCompatTextView detailsFilePathTitle;

  @NonNull
  public final AppCompatTextView detailsFileSizeContent;

  @NonNull
  public final AppCompatTextView detailsFileSizeTitle;

  @NonNull
  public final AppCompatTextView detailsTitle;

  @NonNull
  public final ConstraintLayout lengthLayout;

  @NonNull
  public final ConstraintLayout nameLayout;

  @NonNull
  public final ConstraintLayout pathLayout;

  @NonNull
  public final ConstraintLayout sizeLayout;

  @NonNull
  public final MaterialCardView songDetails;

  private SongDetailsDialogBinding(@NonNull RelativeLayout rootView,
      @NonNull ConstraintLayout bitrateLayout, @NonNull MaterialButton btnOk,
      @NonNull AppCompatTextView detailsFileBitrateContent,
      @NonNull AppCompatTextView detailsFileBitrateTitle,
      @NonNull AppCompatTextView detailsFileLengthContent,
      @NonNull AppCompatTextView detailsFileLengthTitle,
      @NonNull AppCompatTextView detailsFileNameContent,
      @NonNull AppCompatTextView detailsFileNameTitle,
      @NonNull AppCompatTextView detailsFilePathContent,
      @NonNull AppCompatTextView detailsFilePathTitle,
      @NonNull AppCompatTextView detailsFileSizeContent,
      @NonNull AppCompatTextView detailsFileSizeTitle, @NonNull AppCompatTextView detailsTitle,
      @NonNull ConstraintLayout lengthLayout, @NonNull ConstraintLayout nameLayout,
      @NonNull ConstraintLayout pathLayout, @NonNull ConstraintLayout sizeLayout,
      @NonNull MaterialCardView songDetails) {
    this.rootView = rootView;
    this.bitrateLayout = bitrateLayout;
    this.btnOk = btnOk;
    this.detailsFileBitrateContent = detailsFileBitrateContent;
    this.detailsFileBitrateTitle = detailsFileBitrateTitle;
    this.detailsFileLengthContent = detailsFileLengthContent;
    this.detailsFileLengthTitle = detailsFileLengthTitle;
    this.detailsFileNameContent = detailsFileNameContent;
    this.detailsFileNameTitle = detailsFileNameTitle;
    this.detailsFilePathContent = detailsFilePathContent;
    this.detailsFilePathTitle = detailsFilePathTitle;
    this.detailsFileSizeContent = detailsFileSizeContent;
    this.detailsFileSizeTitle = detailsFileSizeTitle;
    this.detailsTitle = detailsTitle;
    this.lengthLayout = lengthLayout;
    this.nameLayout = nameLayout;
    this.pathLayout = pathLayout;
    this.sizeLayout = sizeLayout;
    this.songDetails = songDetails;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SongDetailsDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SongDetailsDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.song_details_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SongDetailsDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bitrate_layout;
      ConstraintLayout bitrateLayout = ViewBindings.findChildViewById(rootView, id);
      if (bitrateLayout == null) {
        break missingId;
      }

      id = R.id.btnOk;
      MaterialButton btnOk = ViewBindings.findChildViewById(rootView, id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.details_file_bitrate_content;
      AppCompatTextView detailsFileBitrateContent = ViewBindings.findChildViewById(rootView, id);
      if (detailsFileBitrateContent == null) {
        break missingId;
      }

      id = R.id.details_file_bitrate_title;
      AppCompatTextView detailsFileBitrateTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailsFileBitrateTitle == null) {
        break missingId;
      }

      id = R.id.details_file_length_content;
      AppCompatTextView detailsFileLengthContent = ViewBindings.findChildViewById(rootView, id);
      if (detailsFileLengthContent == null) {
        break missingId;
      }

      id = R.id.details_file_length_title;
      AppCompatTextView detailsFileLengthTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailsFileLengthTitle == null) {
        break missingId;
      }

      id = R.id.details_file_name_content;
      AppCompatTextView detailsFileNameContent = ViewBindings.findChildViewById(rootView, id);
      if (detailsFileNameContent == null) {
        break missingId;
      }

      id = R.id.details_file_name_title;
      AppCompatTextView detailsFileNameTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailsFileNameTitle == null) {
        break missingId;
      }

      id = R.id.details_file_path_content;
      AppCompatTextView detailsFilePathContent = ViewBindings.findChildViewById(rootView, id);
      if (detailsFilePathContent == null) {
        break missingId;
      }

      id = R.id.details_file_path_title;
      AppCompatTextView detailsFilePathTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailsFilePathTitle == null) {
        break missingId;
      }

      id = R.id.details_file_size_content;
      AppCompatTextView detailsFileSizeContent = ViewBindings.findChildViewById(rootView, id);
      if (detailsFileSizeContent == null) {
        break missingId;
      }

      id = R.id.details_file_size_title;
      AppCompatTextView detailsFileSizeTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailsFileSizeTitle == null) {
        break missingId;
      }

      id = R.id.details_title;
      AppCompatTextView detailsTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailsTitle == null) {
        break missingId;
      }

      id = R.id.length_layout;
      ConstraintLayout lengthLayout = ViewBindings.findChildViewById(rootView, id);
      if (lengthLayout == null) {
        break missingId;
      }

      id = R.id.name_layout;
      ConstraintLayout nameLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameLayout == null) {
        break missingId;
      }

      id = R.id.path_layout;
      ConstraintLayout pathLayout = ViewBindings.findChildViewById(rootView, id);
      if (pathLayout == null) {
        break missingId;
      }

      id = R.id.size_layout;
      ConstraintLayout sizeLayout = ViewBindings.findChildViewById(rootView, id);
      if (sizeLayout == null) {
        break missingId;
      }

      id = R.id.songDetails;
      MaterialCardView songDetails = ViewBindings.findChildViewById(rootView, id);
      if (songDetails == null) {
        break missingId;
      }

      return new SongDetailsDialogBinding((RelativeLayout) rootView, bitrateLayout, btnOk,
          detailsFileBitrateContent, detailsFileBitrateTitle, detailsFileLengthContent,
          detailsFileLengthTitle, detailsFileNameContent, detailsFileNameTitle,
          detailsFilePathContent, detailsFilePathTitle, detailsFileSizeContent,
          detailsFileSizeTitle, detailsTitle, lengthLayout, nameLayout, pathLayout, sizeLayout,
          songDetails);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
